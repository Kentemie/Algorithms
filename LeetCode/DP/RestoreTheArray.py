# A program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a 
# string of digits s and all we know is that all integers in the array were in the range [1, k] and there are no leading zeros
# in the array.

# Given the string s and the integer k, return the number of the possible arrays that can be printed as s using the mentioned
# program. Since the answer may be very large, return it modulo 109 + 7.

def numberOfArrays(s, k):
    dp = [-1] * len(s)
    MOD = (10 ** 9) + 7

    def DFS(i):
        if i == len(s):
            return 1
        
        if dp[i] != -1:
            return dp[i]
        
        if s[i] == '0':
            return 0
        
        dp[i] = 0

        for j in range(i, len(s)):
            if int(s[i:j + 1]) > k:
                break
            dp[i] += DFS(j + 1) % MOD

        return dp[i] % MOD
    
    return DFS(0)


s = "1000"
k = 10000

s = "1000"
k = 10

s = "1317"
k = 2000

s = "2478548369878996585606549435752277096254382168590508500176472417784163640319966027524468723792936084875055041856079851119497347194522600356917272775185824785563903365946173426516222132611288011060134567419005705741306356789348941990814672197792434009776256866493889552603566939349618134975775204780453548896835479143301597145301368293661605542249514599696452480282907353999921429022248103870976684691251718705158140656660590081157003259327661537129630473675266941327291788074032472578688931381870887596509660815672686851854061339255699146235100497295780301330563762194995073452903242158358710797025698342878680660713248300132130418686032466462004886068597736600822602456292180474428280015695088227365662824866401727551989690400065711659012033084119333541377315314833688595448170104023188592792016271015076749994228406274713277523820428185556510083970675579213581304970652497817100798089372851314006693567264649405634221641109351256951311163840400640307826618439669649559218529175723338937138683140941"  
k = 123456789

print(numberOfArrays(s, k))